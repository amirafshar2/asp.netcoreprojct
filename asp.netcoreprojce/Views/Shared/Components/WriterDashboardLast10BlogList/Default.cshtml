@model IEnumerable<BE.concrete.Blog>

<div class="row">
    <div class="col-12 grid-margin">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Son 10 Blog</h4>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th> # </th>
                                <th> Görsel    Başlık </th>
                                <th> Kategori </th>
                                <th> Tarih </th>
                                <th> Detaylar </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <th> @item.id </th>
                                    <td>
                                        <img src="@item.İmage" class="mr-2" alt="image"> @item.Title
                                    </td>
                                    <td>
                                        <label class="badge @GetCategoryBadgeClass(item.Category.Name)">@item.Category.Name</label>
                                    </td>
                                    <td> @item.CreateDate.ToString("dd,MMM,yyyy") </td>
                                    <td><a href="/Blog/BlogReadAll/@item.id/" class="btn btn-dark">Detaylar</a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



 @functions {
    string GetCategoryBadgeClass(string c)
    {
        if (!string.IsNullOrEmpty(c))
        {
            switch (c)
            {
                case "Yazılım":
                    return "badge badge-gradient-success";
                case "Teknoloji":
                    return "badge badge-gradient-danger";
                case "Filim ":
                    return "badge badge-gradient-warning";
                case "Spor":
                    return "badge badge-gradient-primary";
            }
        }
          
        
         return "badge badge-gradient-primary";
       
    }
}
 